[{"C:\\Users\\balem\\my-app\\src\\index.js":"1","C:\\Users\\balem\\my-app\\src\\App.js":"2","C:\\Users\\balem\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\balem\\my-app\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\balem\\my-app\\src\\components\\Navbar\\Navbar.jsx":"5","C:\\Users\\balem\\my-app\\src\\components\\Profile\\Profile.jsx":"6","C:\\Users\\balem\\my-app\\src\\components\\Dialogs\\Dialogs.jsx":"7","C:\\Users\\balem\\my-app\\src\\components\\Dialogs\\BlockMessege\\BlockMessege.jsx":"8","C:\\Users\\balem\\my-app\\src\\components\\Dialogs\\search\\search.jsx":"9","C:\\Users\\balem\\my-app\\src\\redux\\profile-reducer.js":"10","C:\\Users\\balem\\my-app\\src\\redux\\dialog-reducer.js":"11","C:\\Users\\balem\\my-app\\src\\redux\\redux.js":"12","C:\\Users\\balem\\my-app\\src\\redux\\redux-store.js":"13","C:\\Users\\balem\\my-app\\src\\components\\Dialogs\\DialogsContainer.jsx":"14","C:\\Users\\balem\\my-app\\src\\components\\Users\\UsersContainer.jsx":"15","C:\\Users\\balem\\my-app\\src\\redux\\user-reducer.js":"16","C:\\Users\\balem\\my-app\\src\\components\\Users\\Users.jsx":"17","C:\\Users\\balem\\my-app\\src\\components\\common\\Preloader.js":"18","C:\\Users\\balem\\my-app\\src\\components\\Profile\\ProfileContainer.jsx":"19","C:\\Users\\balem\\my-app\\src\\components\\Profile\\CreatePost\\CreatePostContainer.jsx":"20","C:\\Users\\balem\\my-app\\src\\components\\Profile\\Post\\PostContainer.jsx":"21","C:\\Users\\balem\\my-app\\src\\components\\Profile\\Post\\Post.jsx":"22","C:\\Users\\balem\\my-app\\src\\components\\Profile\\CreatePost\\CreatePost.jsx":"23","C:\\Users\\balem\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"24","C:\\Users\\balem\\my-app\\src\\redux\\auth-reducer.js":"25","C:\\Users\\balem\\my-app\\src\\components\\Header\\HeaderContainer.jsx":"26","C:\\Users\\balem\\my-app\\src\\api\\api.js":"27","C:\\Users\\balem\\my-app\\src\\hoc\\withAuthRedirect.js":"28","C:\\Users\\balem\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"29","C:\\Users\\balem\\my-app\\src\\components\\Login\\Login.jsx":"30","C:\\Users\\balem\\my-app\\src\\utils\\validators\\validators.js":"31","C:\\Users\\balem\\my-app\\src\\components\\common\\FormsControls\\FormsControls.js":"32"},{"size":799,"mtime":1610977465800,"results":"33","hashOfConfig":"34"},{"size":1278,"mtime":1612268890650,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":761,"mtime":1612705939162,"results":"37","hashOfConfig":"34"},{"size":1085,"mtime":1612707454729,"results":"38","hashOfConfig":"34"},{"size":487,"mtime":1612250106342,"results":"39","hashOfConfig":"34"},{"size":2334,"mtime":1612607005734,"results":"40","hashOfConfig":"34"},{"size":547,"mtime":1610384892703,"results":"41","hashOfConfig":"34"},{"size":352,"mtime":1610384732699,"results":"42","hashOfConfig":"34"},{"size":4169,"mtime":1612526348445,"results":"43","hashOfConfig":"34"},{"size":2236,"mtime":1612433461902,"results":"44","hashOfConfig":"34"},{"size":4810,"mtime":1610812379333,"results":"45","hashOfConfig":"34"},{"size":788,"mtime":1612270160275,"results":"46","hashOfConfig":"34"},{"size":2497,"mtime":1612433235542,"results":"47","hashOfConfig":"34"},{"size":3543,"mtime":1611855336575,"results":"48","hashOfConfig":"34"},{"size":3963,"mtime":1611855421506,"results":"49","hashOfConfig":"34"},{"size":3155,"mtime":1611855519062,"results":"50","hashOfConfig":"34"},{"size":227,"mtime":1611491427121,"results":"51","hashOfConfig":"34"},{"size":1228,"mtime":1612249768389,"results":"52","hashOfConfig":"34"},{"size":962,"mtime":1612526286970,"results":"53","hashOfConfig":"34"},{"size":377,"mtime":1611056267454,"results":"54","hashOfConfig":"34"},{"size":662,"mtime":1611056398305,"results":"55","hashOfConfig":"34"},{"size":4966,"mtime":1612532436150,"results":"56","hashOfConfig":"34"},{"size":607,"mtime":1612250171230,"results":"57","hashOfConfig":"34"},{"size":1881,"mtime":1612705908739,"results":"58","hashOfConfig":"34"},{"size":575,"mtime":1612705897966,"results":"59","hashOfConfig":"34"},{"size":1342,"mtime":1612698268797,"results":"60","hashOfConfig":"34"},{"size":695,"mtime":1612037906762,"results":"61","hashOfConfig":"34"},{"size":1378,"mtime":1612263182012,"results":"62","hashOfConfig":"34"},{"size":1390,"mtime":1612705086827,"results":"63","hashOfConfig":"34"},{"size":301,"mtime":1612532426051,"results":"64","hashOfConfig":"34"},{"size":445,"mtime":1612605969013,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1wxh3sb",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\balem\\my-app\\src\\index.js",[],["146","147"],"C:\\Users\\balem\\my-app\\src\\App.js",[],"C:\\Users\\balem\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\balem\\my-app\\src\\components\\Header\\Header.jsx",["148","149"],"C:\\Users\\balem\\my-app\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\balem\\my-app\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\balem\\my-app\\src\\components\\Dialogs\\Dialogs.jsx",["150"],"import s from './Dialogs.module.css'\r\nimport Search from \"./search/search\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let onSendMessageClick = (body) => {\r\n        props.SendMessageClick(body);\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        debugger\r\n        props.NewMessageChange(body);\r\n    }\r\n\r\n    if(!props.isAuth){\r\n        return <Redirect to = {\"/login\"} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.grid}>\r\n            <div className={s.leftSide}>\r\n                <Search/>\r\n\r\n                <div className={s.Meseges}>\r\n                    {props.dialogsname}\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.rightSide}>\r\n                {props.messageContent}\r\n                <div>\r\n                    {/*<form onClick={(e)=>{e.preventDefault()}}>*/}\r\n                    {/*    <div><textarea*/}\r\n                    {/*        onChange={onNewMessageChange}*/}\r\n                    {/*        value={props.newMessageBody}*/}\r\n                    {/*        placeholder=\"enter your message\"></textarea></div>*/}\r\n                    {/*    <div>*/}\r\n                    {/*        <button onClick={()=>{onSendMessageClick()}}>send</button>*/}\r\n                    {/*    </div>*/}\r\n                    {/*</form>*/}\r\n                    <FormDialog onSubmit={(values)=>{ console.log(values); if(values.value) {onSendMessageClick(values.value)}}}/>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst maxLength = maxLengthCreator(50);\r\nlet FormDialog = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field\r\n                validate={[required, maxLength]}\r\n                component={Textarea}\r\n                placeholder=\"enter your message\"\r\n                name = \"value\"\r\n            /></div>\r\n            <div>\r\n                <button >send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nFormDialog = reduxForm({\r\n    form: 'formDialog'\r\n})(FormDialog)\r\n\r\nexport default Dialogs;","C:\\Users\\balem\\my-app\\src\\components\\Dialogs\\BlockMessege\\BlockMessege.jsx",["151"],"import s from './BlockMessege.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst BlockMessege = (obj) => {\r\n\r\n\r\n\r\n  return (\r\n    <NavLink to={'/Messages/' + obj.id} class={s.Post}>\r\n      <div class={s.Header}>\r\n        <div class={s.left}>\r\n          <a href=\"\" class={s.link}> <img src={obj.srck} alt=\"ava\" /></a>\r\n          <div class={s.info}>\r\n            <span>{obj.name} </span>\r\n            <span>...</span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </NavLink>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default BlockMessege;","C:\\Users\\balem\\my-app\\src\\components\\Dialogs\\search\\search.jsx",[],"C:\\Users\\balem\\my-app\\src\\redux\\profile-reducer.js",[],"C:\\Users\\balem\\my-app\\src\\redux\\dialog-reducer.js",[],"C:\\Users\\balem\\my-app\\src\\redux\\redux.js",[],["152","153"],"C:\\Users\\balem\\my-app\\src\\redux\\redux-store.js",[],"C:\\Users\\balem\\my-app\\src\\components\\Dialogs\\DialogsContainer.jsx",["154"],"import BlockMessege from \"./BlockMessege/BlockMessege\";\r\nimport {sendMessegeCreator, updateNewMassageBodyCreator} from \"../../redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n//наша реализация контейнерной компоненты c прокидыванием пропсов через все древо без использования контекста\r\n// const DialogsContainer = (props) => {\r\n//\r\n//     let dialogsname = props.dialogsPage.blockMessege.map((elem) => {\r\n//         return (\r\n//             <BlockMessege name={elem.name} id={elem.id} srck={elem.srck}/>\r\n//         )\r\n//     });\r\n//\r\n//     let messageContent = props.dialogsPage.messegeContent.map((elem) => {\r\n//         return (\r\n//             <div>{elem.message}</div>\r\n//         )\r\n//     })\r\n//\r\n//     let onSendMessageClick = () => {\r\n//         props.dispatch(sendMessegeCreator())\r\n//     }\r\n//\r\n//     let onNewMessageChange = (body) => {\r\n//         props.dispatch(updateNewMassageBodyCreator(body));\r\n//     }\r\n//\r\n//\r\n//     return <Dialogs SendMessageClick={onSendMessageClick} NewMessageChange={onNewMessageChange}\r\n//                     dialogsname={dialogsname} messageContent={messageContent}\r\n//                     newMessageBody={props.dialogsPage.newMessageBody}\r\n//     />\r\n// }\r\n\r\n//Реализация с помощью  RRdx\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageBody: state.dialogsPage.newMessageBody,\r\n        dialogsname: state.dialogsPage.blockMessege.map((elem) => {\r\n            return (\r\n                <BlockMessege name={elem.name} id={elem.id} srck={elem.srck}/>\r\n            )\r\n        }),\r\n        messageContent: state.dialogsPage.messegeContent.map((elem) => {\r\n            return (\r\n                <div>{elem.message}</div>\r\n            )\r\n        }),\r\n    }\r\n},mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        SendMessageClick: (body) => { dispatch(sendMessegeCreator(body))},\r\n        NewMessageChange: (body) => { dispatch(updateNewMassageBodyCreator(body));},\r\n    }\r\n}\r\n\r\n// let AutRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;","C:\\Users\\balem\\my-app\\src\\components\\Users\\UsersContainer.jsx",["155","156","157"],"import React from 'react';\r\nimport {\r\n    buttonPressFollow,\r\n    follow, getUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    statePreload, toggleIsFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/user-reducer\";\r\nimport {connect} from 'react-redux';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader\";\r\nimport {userAPI} from \"../../api/api\";\r\n\r\nclass UsersAPIComponent extends React.Component{\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n\r\n        // this.props.statePreload(true);\r\n        //\r\n        // userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.statePreload(false);\r\n        //     this.props.setUsers(data.items);\r\n        //     this.props.setTotalUsersCount(data.totalCount);\r\n        // })\r\n\r\n    }\r\n\r\n    onPageChanges = (pageNumber) => {\r\n\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n        // this.props.setCurrentPage(pageNumber);\r\n        //\r\n        // this.props.statePreload(true);\r\n        // userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n        //\r\n        //     this.props.statePreload(false);\r\n        //     this.props.setUsers(data.items);\r\n        //\r\n        // })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (<>\r\n\r\n            <Preloader isFetching = {this.props.isFetching}/>\r\n            <Users totalUsersCount = { this.props.totalUsersCount}\r\n                   pageSize = {this.props.pageSize}\r\n                   currentPage = {this.props.currentPage}\r\n                   onPageChanges = {this.onPageChanges}\r\n                   users = {this.props.users}\r\n                   follow = {this.props.follow}\r\n                   unfollow = {this.props.unfollow}\r\n                   followingInProgress = {this.props.followingInProgress}\r\n                   toggleIsFollowingProgress = {this.props.toggleIsFollowingProgress}\r\n                   buttonPressFollow = {this.props.buttonPressFollow}\r\n\r\n            />\r\n\r\n\r\n            </>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n};\r\n\r\n//Долгий способ прокидывания пропсов\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(follow(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollow(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsers(users));\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPage(currentPage))\r\n        },\r\n        setTotalUsersCount: (totalCount) =>{\r\n            dispatch(setTotalUsersCount(totalCount));\r\n        },\r\n        Preload: (bool) =>{\r\n            dispatch(statePreload(bool));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst UsersContainer = connect(mapStateToProps,\r\n    {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        statePreload,\r\n        toggleIsFollowingProgress,\r\n        getUsers,\r\n        buttonPressFollow\r\n    }\r\n    ) (UsersAPIComponent);\r\nexport default UsersContainer;","C:\\Users\\balem\\my-app\\src\\redux\\user-reducer.js",["158"],"import {userAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst CHANGE_STATE_PRELOAD = 'CHANGE_STATE_PRELOAD';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGLE_IS_FOLLOWIN_PROGRESS';\r\n\r\nconst initialState = {\r\n    users: [\r\n    ],\r\n    pageSize: 100,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE :\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT :\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        case CHANGE_STATE_PRELOAD :\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS :\r\n            return {\r\n                ...state,\r\n                followingInProgress : action.followingInProgress\r\n                    ? [...state.followingInProgress,  action.userId]\r\n                    : [...state.followingInProgress.filter(id => id != action.userId)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId: userId,\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId: userId,\r\n    }\r\n}\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalUsersCount})\r\nexport const statePreload = (bool) => ({type: CHANGE_STATE_PRELOAD, isFetching: bool})\r\nexport const toggleIsFollowingProgress = (bool, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress: bool, userId: userId})\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n   return (dispatch) => {\r\n\r\n       dispatch(setCurrentPage(currentPage));\r\n       dispatch(statePreload(true));\r\n\r\n        userAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(statePreload(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n    }\r\n}\r\n\r\nexport const buttonPressFollow = (userId, request, typeFollow) => {\r\n\r\n    return (dispatch) => {\r\n    debugger\r\n        dispatch(toggleIsFollowingProgress(true, userId));\r\n        userAPI.clickButton(userId, request).then((response) => {\r\n            debugger\r\n            if (response.data.resultCode === 0) {\r\n                if(typeFollow === 'unfollow'){\r\n                    dispatch(unfollow(userId))\r\n                } else if (typeFollow === 'follow'){\r\n                    dispatch(follow(userId))\r\n                }\r\n            }\r\n            dispatch(toggleIsFollowingProgress(false, userId));\r\n        })\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n\r\n","C:\\Users\\balem\\my-app\\src\\components\\Users\\Users.jsx",["159","160"],"import React from 'react';\nimport styles from \"./users.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\n\n\nlet Users = (props) => {\n    debugger\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n\n        pages.push(i);\n    }\n\n    return (\n        <div>\n            <div>\n                {pages.map((el) => {\n                    debugger\n                    return <span onClick={(e) => {\n                        e.preventDefault();\n                        props.onPageChanges(el)\n                    }} className={props.currentPage === el ? styles.selectedPage : ''}>{el + ' '}</span>\n                })}\n            </div>\n\n            {\n                props.users.map(u => <div key={u.id}>\n                <span>\n                    <NavLink to={'/profile/' + u.id}> <img\n                        src={u.photos.small ? u.photos.small : 'https://www.minecraftprem.com/assets/img/ahmethakan.jpg'}\n                        alt=\"\"/></NavLink>\n                    <div>\n                        {u.followed\n                            ? <button disabled={props.followingInProgress.some(id => id == u.id)} onClick={() => {\n                                debugger\n                                props.buttonPressFollow( u.id , 'delete', 'unfollow');\n                                // props.toggleIsFollowingProgress(true, u.id);\n                                // userAPI.clickButton(u.id, 'delete').then((response) => {\n                                //     if (response.data.resultCode === 0) {\n                                //         props.unfollow(u.id)\n                                //     }\n                                //     props.toggleIsFollowingProgress(false, u.id);\n                                // })\n                            }}>Unfollow</button>\n                            : <button disabled={props.followingInProgress.some(id => id == u.id)} onClick={() => {\n                                props.buttonPressFollow( u.id , 'post', 'follow');\n                                // props.toggleIsFollowingProgress(true, u.id);\n                                // userAPI.clickButton(u.id, 'post').then((response) => {\n                                //     if (response.data.resultCode === 0) {\n                                //         props.follow(u.id);\n                                //     }\n                                //     props.toggleIsFollowingProgress(false, u.id);\n                                //\n                                // });\n\n                            }}>Follow</button>\n                        };\n\n                    </div>\n                </span>\n                    <span>\n                    <span>\n                        <div>{u.name}</div>\n                        <div>{u.status}</div>\n                    </span>\n                    <span>\n                        {/*<div>{u.location.country}</div>*/}\n                        {/*<div>{u.location.city}</div>*/}\n                    </span>\n                </span>\n\n                </div>)\n            }\n        </div>\n    )\n}\n\n\nexport default Users;","C:\\Users\\balem\\my-app\\src\\components\\common\\Preloader.js",["161"],"import preloader from \"../../assets/image/loader.gif\";\r\nimport React from \"react\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return(\r\n<div>{props.isFetching ? <img src={preloader}/> : null}</div>\r\n)\r\n}\r\n\r\nexport default Preloader;","C:\\Users\\balem\\my-app\\src\\components\\Profile\\ProfileContainer.jsx",["162","163","164"],"import * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {dispatchProfileData, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"react-router\";\r\nimport {profileAPI} from \"../../api/api\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport Dialogs from \"../Dialogs/Dialogs\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n      let useId = this.props.match.params.useId;\r\n      this.props.dispatchProfileData(useId);\r\n\r\n      // profileAPI.getProfileData(useId).then(response => {\r\n      //     this.props.setUserProfile(response.data);\r\n      // })\r\n    }\r\n\r\n    render (){\r\n    return(\r\n        <Profile {...this.props} status = {this.props.status} profile = {this.props.profile}/>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n});\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, dispatchProfileData, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","C:\\Users\\balem\\my-app\\src\\components\\Profile\\CreatePost\\CreatePostContainer.jsx",["165","166"],"import React from 'react';\r\nimport {addPostActionCreator, updatePostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport {connect} from \"react-redux\";\r\nimport Post from \"../Post/Post\";\r\n\r\n\r\n//Идея контейнерной компоненты, быть оберткой для презентационной, хранит все данные и логику\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n},mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            const newVar = updatePostTextActionCreator(text);\r\n            dispatch(newVar);\r\n        },\r\n        addPost: (data) => {\r\n            dispatch(addPostActionCreator(data));\r\n        },\r\n    }\r\n}\r\n\r\nconst CreatePostContainer = connect(mapStateToProps, mapDispatchToProps) (CreatePost);\r\n\r\n\r\nexport default CreatePostContainer;","C:\\Users\\balem\\my-app\\src\\components\\Profile\\Post\\PostContainer.jsx",["167"],"import s from './Post.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport Post from \"./Post\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n},mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\nconst PostContainer = connect(mapStateToProps, mapDispatchToProps) (Post)\r\n\r\nexport default PostContainer;","C:\\Users\\balem\\my-app\\src\\components\\Profile\\Post\\Post.jsx",[],"C:\\Users\\balem\\my-app\\src\\components\\Profile\\CreatePost\\CreatePost.jsx",["168","169","170","171"],"import s from './CreatePost.module.css';\r\nimport React from 'react';\r\nimport {addPostActionCreator, updatePostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nfunction PostForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div className={s.createPostBody}>\r\n            <Field validate={[required,maxLength]}\r\n                  placeholder={'asdfsd'} component={Textarea} className={s.createPostInput} name={'newPostText'} />\r\n        </div>\r\n\r\n        <div className={s.createPostFooter}>\r\n            <button className={s.tag}>\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                        d=\"M21.75 3.75H2.25C1.83516 3.75 1.5 4.08516 1.5 4.5V19.5C1.5 19.9148 1.83516 20.25 2.25 20.25H21.75C22.1648 20.25 22.5 19.9148 22.5 19.5V4.5C22.5 4.08516 22.1648 3.75 21.75 3.75ZM20.8125 18.5625H3.1875V17.6273L6.43359 13.7766L9.95156 17.9484L15.4242 11.4609L20.8125 17.85V18.5625ZM20.8125 15.5203L15.5672 9.3C15.4922 9.21094 15.3562 9.21094 15.2812 9.3L9.95156 15.6188L6.57656 11.618C6.50156 11.5289 6.36562 11.5289 6.29062 11.618L3.1875 15.2977V5.4375H20.8125V15.5203Z\"\r\n                        fill=\"#1890FF\"></path>\r\n                    <path\r\n                        d=\"M9.95156 17.9484L6.43359 13.7766L3.1875 17.6273V18.5625H20.8125V17.85L15.4242 11.4609L9.95156 17.9484Z\"\r\n                        fill=\"#E6F7FF\"></path>\r\n                    <path\r\n                        d=\"M3.1875 15.2977L6.29062 11.618C6.36562 11.5289 6.50156 11.5289 6.57656 11.618L9.95156 15.6188L15.2812 9.3C15.3562 9.21094 15.4922 9.21094 15.5672 9.3L20.8125 15.5203V5.4375H3.1875V15.2977ZM7.125 6.5625C7.39585 6.5625 7.66405 6.61585 7.91428 6.7195C8.16452 6.82315 8.39189 6.97507 8.58341 7.16659C8.77493 7.35811 8.92685 7.58548 9.0305 7.83572C9.13415 8.08595 9.1875 8.35415 9.1875 8.625C9.1875 8.89585 9.13415 9.16405 9.0305 9.41428C8.92685 9.66452 8.77493 9.89189 8.58341 10.0834C8.39189 10.2749 8.16452 10.4269 7.91428 10.5305C7.66405 10.6342 7.39585 10.6875 7.125 10.6875C6.57799 10.6875 6.05339 10.4702 5.66659 10.0834C5.2798 9.69661 5.0625 9.17201 5.0625 8.625C5.0625 8.07799 5.2798 7.55339 5.66659 7.16659C6.05339 6.7798 6.57799 6.5625 7.125 6.5625Z\"\r\n                        fill=\"#E6F7FF\"></path>\r\n                    <path\r\n                        d=\"M6.46875 8.625C6.46875 8.79905 6.53789 8.96597 6.66096 9.08904C6.78403 9.21211 6.95095 9.28125 7.125 9.28125C7.29905 9.28125 7.46597 9.21211 7.58904 9.08904C7.71211 8.96597 7.78125 8.79905 7.78125 8.625C7.78125 8.45095 7.71211 8.28403 7.58904 8.16096C7.46597 8.03789 7.29905 7.96875 7.125 7.96875C6.95095 7.96875 6.78403 8.03789 6.66096 8.16096C6.53789 8.28403 6.46875 8.45095 6.46875 8.625Z\"\r\n                        fill=\"#E6F7FF\"></path>\r\n                    <path\r\n                        d=\"M7.125 10.6875C7.39585 10.6875 7.66405 10.6342 7.91428 10.5305C8.16452 10.4269 8.39189 10.2749 8.58341 10.0834C8.77493 9.89189 8.92685 9.66452 9.0305 9.41428C9.13415 9.16405 9.1875 8.89585 9.1875 8.625C9.1875 8.35415 9.13415 8.08595 9.0305 7.83572C8.92685 7.58548 8.77493 7.35811 8.58341 7.16659C8.39189 6.97507 8.16452 6.82315 7.91428 6.7195C7.66405 6.61585 7.39585 6.5625 7.125 6.5625C6.57799 6.5625 6.05339 6.7798 5.66659 7.16659C5.2798 7.55339 5.0625 8.07799 5.0625 8.625C5.0625 9.17201 5.2798 9.69661 5.66659 10.0834C6.05339 10.4702 6.57799 10.6875 7.125 10.6875ZM7.125 7.96875C7.48828 7.96875 7.78125 8.26172 7.78125 8.625C7.78125 8.98828 7.48828 9.28125 7.125 9.28125C6.76172 9.28125 6.46875 8.98828 6.46875 8.625C6.46875 8.26172 6.76172 7.96875 7.125 7.96875Z\"\r\n                        fill=\"#1890FF\"></path>\r\n                </svg>\r\n                <span className>Photo/Video</span>\r\n            </button>\r\n\r\n            <button className={s.tag}>\r\n                <span>Send</span>\r\n            </button>\r\n\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nPostForm = reduxForm({form: \"ProfileForm\"})(PostForm);\r\n\r\nconst CreatePost = (props) => {\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n        // const newVar = updatePostTextActionCreator(text);\r\n        // props.dispatch(newVar);\r\n    }\r\n  return (\r\n        <div className={s.createPost}>\r\n\r\n            <div className={s.createPostHeader}>\r\n                <h4 className={s.createPostTitle}>\r\n                    Create post\r\n                </h4>\r\n            </div>\r\n\r\n            <PostForm onSubmit={onAddPost} />\r\n\r\n        </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default CreatePost;","C:\\Users\\balem\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["172","173"],"import s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport {updateStatus} from \"../../../redux/profile-reducer\";\r\nlet ProfileInfo = (props) => {\r\n    return(\r\n        <div>\r\n            <img className={s.img} src={(props.profile.photos === undefined) ? ' ': (props.profile.photos.large === null) ? ('https://i007.fotocdn.net/s123/2950fc2e1fadccab/user_xl/2816616767.jpg'): (props.profile.photos.large)}/>\r\n            <ProfileStatus updateStatus = {props.updateStatus} {...props.profile} status = {props.status}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo","C:\\Users\\balem\\my-app\\src\\redux\\auth-reducer.js",[],"C:\\Users\\balem\\my-app\\src\\components\\Header\\HeaderContainer.jsx",["174"],"C:\\Users\\balem\\my-app\\src\\api\\api.js",[],"C:\\Users\\balem\\my-app\\src\\hoc\\withAuthRedirect.js",["175"],"import * as React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Dialogs from \"../components/Dialogs/Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth){\r\n                return <Redirect to={'/login'} />\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    let AutRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return AutRedirectComponent;\r\n\r\n}","C:\\Users\\balem\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",["176"],"import React from 'react'\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n\r\n    state = {\r\n        status: this.props.status,\r\n        editMode: false,\r\n\r\n    }\r\n\r\n\r\n\r\n    activateEditMode(){\r\n        console.log(this.state);\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode(){\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.state.status = this.props.status;\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log()\r\n        return <div>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={() => {this.activateEditMode()}}>\r\n                       {this.props.status}\r\n                    </span>\r\n                </div>\r\n            }\r\n\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={() => { this.deactivateEditMode()}} value={this.state.status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatus","C:\\Users\\balem\\my-app\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\balem\\my-app\\src\\utils\\validators\\validators.js",[],"C:\\Users\\balem\\my-app\\src\\components\\common\\FormsControls\\FormsControls.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":3,"column":13,"nodeType":"183","messageId":"184","endLine":3,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":13,"column":9,"nodeType":"187","endLine":13,"endColumn":121},{"ruleId":"181","severity":1,"message":"188","line":16,"column":9,"nodeType":"183","messageId":"184","endLine":16,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":12,"column":11,"nodeType":"187","endLine":12,"endColumn":37},{"ruleId":"177","replacedBy":"191"},{"ruleId":"179","replacedBy":"192"},{"ruleId":"181","severity":1,"message":"193","line":5,"column":9,"nodeType":"183","messageId":"184","endLine":5,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":12,"column":13,"nodeType":"183","messageId":"184","endLine":12,"endColumn":18},{"ruleId":"181","severity":1,"message":"194","line":15,"column":9,"nodeType":"183","messageId":"184","endLine":15,"endColumn":16},{"ruleId":"181","severity":1,"message":"195","line":87,"column":5,"nodeType":"183","messageId":"184","endLine":87,"endColumn":23},{"ruleId":"196","severity":1,"message":"197","line":66,"column":69,"nodeType":"198","messageId":"199","endLine":66,"endColumn":71},{"ruleId":"196","severity":1,"message":"200","line":36,"column":89,"nodeType":"198","messageId":"199","endLine":36,"endColumn":91},{"ruleId":"196","severity":1,"message":"200","line":47,"column":89,"nodeType":"198","messageId":"199","endLine":47,"endColumn":91},{"ruleId":"185","severity":1,"message":"186","line":7,"column":26,"nodeType":"187","endLine":7,"endColumn":48},{"ruleId":"181","severity":1,"message":"201","line":6,"column":9,"nodeType":"183","messageId":"184","endLine":6,"endColumn":19},{"ruleId":"181","severity":1,"message":"193","line":7,"column":9,"nodeType":"183","messageId":"184","endLine":7,"endColumn":17},{"ruleId":"181","severity":1,"message":"202","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":15},{"ruleId":"181","severity":1,"message":"203","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"204","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":12},{"ruleId":"181","severity":1,"message":"205","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":9},{"ruleId":"181","severity":1,"message":"206","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":29},{"ruleId":"181","severity":1,"message":"207","line":3,"column":31,"nodeType":"183","messageId":"184","endLine":3,"endColumn":58},{"ruleId":"208","severity":1,"message":"209","line":48,"column":1,"nodeType":"183","messageId":"210","endLine":48,"endColumn":9},{"ruleId":"181","severity":1,"message":"211","line":57,"column":9,"nodeType":"183","messageId":"184","endLine":57,"endColumn":21},{"ruleId":"181","severity":1,"message":"212","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":7,"column":13,"nodeType":"187","endLine":7,"endColumn":231},{"ruleId":"181","severity":1,"message":"213","line":4,"column":32,"nodeType":"183","messageId":"184","endLine":4,"endColumn":47},{"ruleId":"181","severity":1,"message":"202","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":15},{"ruleId":"214","severity":1,"message":"215","line":35,"column":13,"nodeType":"216","endLine":35,"endColumn":23},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'onNewMessageChange' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["217"],["218"],"'Redirect' is defined but never used.","'userAPI' is defined but never used.","'mapDispatchToProps' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'profileAPI' is defined but never used.","'Dialogs' is defined but never used.","'React' is defined but never used.","'Post' is defined but never used.","'s' is defined but never used.","'addPostActionCreator' is defined but never used.","'updatePostTextActionCreator' is defined but never used.","no-func-assign","'PostForm' is a function.","isAFunction","'onPostChange' is assigned a value but never used.","'updateStatus' is defined but never used.","'setAuthUserData' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]